// Mocks generated by Mockito 5.4.4 from annotations
// in crowdj/test/unit/auth/auth_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:crowdj/feature/auth/data/user_data_source.dart' as _i2;
import 'package:crowdj/feature/auth/models/user_props.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataSource extends _i1.Mock implements _i2.UserDataSource {
  @override
  _i3.Future<_i4.UserProps> getUserProps(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserProps,
          [userId],
        ),
        returnValue:
            _i3.Future<_i4.UserProps>.value(_i5.dummyValue<_i4.UserProps>(
          this,
          Invocation.method(
            #getUserProps,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.UserProps>.value(_i5.dummyValue<_i4.UserProps>(
          this,
          Invocation.method(
            #getUserProps,
            [userId],
          ),
        )),
      ) as _i3.Future<_i4.UserProps>);

  @override
  _i3.Future<void> createUserProps(
    String? userId,
    _i4.UserProps? userProps,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserProps,
          [
            userId,
            userProps,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
